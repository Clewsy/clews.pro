######################################### Docker compose yaml file for clews.pro and sub-domains
#### Containers include:
#### - nginx-proxy              NGINX-Proxy         (image: jwilder/nginx-proxy)
#### - letsencrypt              Let's Encrypt       (image: jrcs/letsencrypt-nginx-proxy-companion)
#### - nextcloud-db             MariaDB             (image: linuxserver/mariadb)
#### - nextcloud-app            Nextcloud           (image: nextcloud)
#### - nextcloud-cron           Nextcloud-Cronjob   (image: rcdailey/nextcloud-cronjob)
#### - nextcloud-bu             NCBU                (image: clewsy/ncbu)
#### - collabora-app            Collabora           (image: collabora/code)
#### - airsonic-app             Airsonic            (image: linuxserver/airsonic)
#### - bitwarden-app            BitWarden           (image: bitwardenrs/server)
#### - calibre-app              Calibre             (image: linuxserver/calibre)
#### - calibre-web-app          Calibre-web         (image: linuxserver/calibre-web)
#### - nginx-clews.pro          NGINX               (image: nginx)
#### - nginx-tyler.clews.pro    NGINX               (image: nginx)
#### - nginx-jadon.clews.pro    NGINX               (image: nginx)

## Note some sensitive environment variables defined in external file ".env"

version: '3'  

services:

######################################### Nginx Proxy container
  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    container_name: nginx-proxy
    networks:
      - clews.pro_network
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true"
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx-proxy/conf.d:/etc/nginx/conf.d:rw
      - ./nginx-proxy/vhost.d:/etc/nginx/vhost.d:rw
      - ./nginx-proxy/html:/usr/share/nginx/html:rw
      - ./nginx-proxy/certs:/etc/nginx/certs:ro
      - ./nginx-proxy/clews.pro_custom_proxy_settings.conf:/etc/nginx/conf.d/my_custom_proxy_settings.conf      # Enables nc uploads>1MB (client_max_body_size 500m)
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: unless-stopped

######################################### Let's Encrypt container
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    networks:
      - clews.pro_network
    depends_on:
      - nginx-proxy
    volumes:
      - ./nginx-proxy/certs:/etc/nginx/certs:rw
      - ./nginx-proxy/vhost.d:/etc/nginx/vhost.d:rw
      - ./nginx-proxy/html:/usr/share/nginx/html:rw
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped

######################################### MariaDB database (for nextcloud) container
  nextcloud-db:
    image: linuxserver/mariadb
    container_name: nextcloud-db
    networks:
      - clews.pro_network
    ports:
      - 3306:3306
    environment:
      - PUID=1000
      - PGID=1000
      - MYSQL_ROOT_PASSWORD=${MARIADB_NEXTCLOUD_MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=${MARIADB_NEXTCLOUD_MYSQL_PASSWORD}
      - MYSQL_DATABASE=nextcloud
    volumes:
      - nextcloud-db:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

######################################### Nextcloud web app container
  nextcloud-app:
    image: nextcloud
    container_name: nextcloud-app
    networks:
      - clews.pro_network
    depends_on:
      - letsencrypt
      - nginx-proxy
      - nextcloud-db
    environment:
      - VIRTUAL_HOST=${NEXTCLOUD_APP_URL}
      - LETSENCRYPT_HOST=${NEXTCLOUD_APP_URL}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}  
    volumes:
      - nextcloud-app:/var/www/html
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

######################################### Nextcloud cron container (for periodically running cron.php)
  nextcloud-cron:
    image: rcdailey/nextcloud-cronjob
    container_name: nextcloud-cron
    network_mode: none
    depends_on:
      - nextcloud-app
    environment:
      - NEXTCLOUD_CONTAINER_NAME=nextcloud-app
      - NEXTCLOUD_CRON_MINUTE_INTERVAL=5
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

######################################### Nextcloud backup container (for periodically copying data and database)
  nextcloud-bu:
    image: clewsy/ncbu
    container_name: nextcloud-bu
    networks:
      - clews.pro_network
    depends_on:
      - nextcloud-app
      - nextcloud-db
    environment:
      - NEXTCLOUD_EXEC_USER=www-data                      # Name of the user that can execute the occ command in the nextcloud container (www-data by default).
      - NEXTCLOUD_CONTAINER=nextcloud-app                 # Name of the nextcloud container.
      - NEXTCLOUD_DATABASE_CONTAINER=nextcloud-db         # Name of the nextcloud database container.
      - NEXTCLOUD_BACKUP_CRON=0 0 * * *                   # Run at midnight.
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock         # Allows container to access another container.
      - /etc/localtime:/etc/localtime:ro                  # Use to sync time so that the crond runs as expected.
      - nextcloud-app:/mnt/nextcloud_app                  # Must match the docker-managed nextcloud app volume (/var/www/html).
      - nextcloud-db:/mnt/nextcloud_db                    # Must match the docker-managed nextcloud database volume (/var/lib/mysql).
      - ./nextcloud-bu:/backup                            # Convenient location for the backup.
    restart: unless-stopped

######################################### Collabora (for nextcloud) container
  collabora-app:
    image: collabora/code
    container_name: collabora-app
    networks:
      - clews.pro_network
    depends_on:
      - letsencrypt
      - nginx-proxy
 #   ports:
 #    - 9980:9980
    cap_add:
      - MKNOD
    environment:
      - domain=nextcloud\.clews\.pro    # This needs to be the same as the nextcloud domain, with periods escaped.
      - username=${COLLABORA_APP_USERNAME}
      - password=${COLLABORA_APP_PASSWORD}
      - VIRTUAL_PORT=9980
      - VIRTUAL_HOST=${COLLABORA_APP_URL}
      - LETSENCRYPT_HOST=${COLLABORA_APP_URL}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - extra_params=--o:ssl.enable=false --o:ssl.termination=true
    restart: unless-stopped

######################################### Airsonic container
  airsonic-app:
    image: linuxserver/airsonic
    container_name: airsonic-app
    networks:
      - clews.pro_network
    depends_on:
      - letsencrypt
      - nginx-proxy
 #   ports:
 #     - 4040:4040
    environment:
      - PUID=1000
      - PGID=1000
      - VIRTUAL_PORT=4040
      - VIRTUAL_HOST=${AIRSONIC_APP_URL}
      - LETSENCRYPT_HOST=${AIRSONIC_APP_URL}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    volumes:
      - ./airsonic-app/config:/config
      - ./airsonic-app/music:/music
      - ./airsonic-app/playlists:/playlists
      - ./airsonic-app/podcasts:/podcasts
      - ./airsonic-app/media:/media
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

######################################### Bitwarden web app container
  bitwarden-app:
    image: bitwardenrs/server:latest
    container_name: bitwarden-app
    networks:
      - clews.pro_network
    depends_on:
      - letsencrypt
      - nginx-proxy
    ports:
      - 8170:80 #Keep a port accessible on the local network too.
    environment:
      - VIRTUAL_HOST=${BITWARDEN_APP_URL}
      - LETSENCRYPT_HOST=${BITWARDEN_APP_URL}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - SIGNUPS_ALLOWED=false
      - LOG_FILE="/data/bitwarden.log"
    volumes:
      - ./bitwarden-app/data/:/data/
    restart: unless-stopped

######################################### Calibre container
  calibre-app:
    image: linuxserver/calibre
    container_name: calibre-app
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./calibre-app/config:/config
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 8080:8080 #Desktop gui
      - 8081:8081 #Webserver gui
      - 8082:9090 #Wireless device connection
    restart: unless-stopped

######################################### Calibre-Web container
  calibre-web-app:
    image: linuxserver/calibre-web
    container_name: calibre-web-app
    networks:
      - clews.pro_network
    depends_on:
      - letsencrypt
      - nginx-proxy
      - calibre-app
#    ports:
#      - 8083:8083
    environment:
      - PUID=1000
      - PGID=1000
      - DOCKER_MODS=linuxserver/calibre-web:calibre
      - VIRTUAL_PORT=8083
      - VIRTUAL_HOST=${CALIBRE_APP_URL}
      - LETSENCRYPT_HOST=${CALIBRE_APP_URL}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    volumes:
      - ./calibre-app/calibre-web-app/config:/config  #calibre-web-app specific confic (separate from calibre-app config)
      - ./calibre-app/config:/books                   #Map /books to the calibre-app container config volume (contains books/metadata)
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

######################################### Personal website container
  nginx-clews.pro:
    image: nginx
    container_name: nginx-clews.pro
    networks:
      - clews.pro_network
    depends_on:
      - letsencrypt
      - nginx-proxy
    environment:
      - NGINX_HOST=${NGINX_CLEWS_PRO_URL}
      - NGINX_PORT=80
      - VIRTUAL_HOST=${NGINX_CLEWS_PRO_URL}
      - LETSENCRYPT_HOST=${NGINX_CLEWS_PRO_URL}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    volumes:
      - ./clews.pro/html:/usr/share/nginx/html
    restart: unless-stopped
  
######################################### tyler website container
  nginx-tyler.clews.pro:
    image: nginx
    container_name: nginx-tyler.clews.pro
    networks:
      - clews.pro_network
    depends_on:
      - letsencrypt
      - nginx-proxy
    environment:
      - NGINX_HOST=${NGINX_TYLER_CLEWS_PRO_URL}
      - NGINX_PORT=80
      - VIRTUAL_HOST=${NGINX_TYLER_CLEWS_PRO_URL}
      - LETSENCRYPT_HOST=${NGINX_TYLER_CLEWS_PRO_URL}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    volumes:
      - ./tyler.clews.pro/html:/usr/share/nginx/html
    restart: unless-stopped

######################################### jadon website container
  nginx-jadon.clews.pro:
    image: nginx
    container_name: nginx-jadon.clews.pro
    networks:
      - clews.pro_network
    depends_on:
      - letsencrypt
      - nginx-proxy
    environment:
      - NGINX_HOST=${NGINX_JADON_CLEWS_PRO_URL}
      - NGINX_PORT=80
      - VIRTUAL_HOST=${NGINX_JADON_CLEWS_PRO_URL}
      - LETSENCRYPT_HOST=${NGINX_JADON_CLEWS_PRO_URL}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    volumes:
      - ./jadon.clews.pro/html:/usr/share/nginx/html
    restart: unless-stopped

######################################### Docker-managed volumes
volumes:
  nextcloud-app:
  nextcloud-db:

######################################### Docker-managed networks
networks:
  clews.pro_network:
