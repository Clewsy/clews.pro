######################################### Docker compose yaml file for clews.pro and sub-domains
#### Containers include:
#### - nginx-proxy              nginx-proxy         (image: nginxproxy/nginx-proxy)
#### - acme-companion           acme-companion      (image: nginxproxy/acme-companion)
#### - nc-db                    MariaDB             (image: linuxserver/mariadb)
#### - nc                       Nextcloud           (image: nextcloud)
#### - nc-cron                  Nextcloud-Cronjob   (image: rcdailey/nextcloud-cronjob)
#### - ncbu                     NCBU                (image: registry.gitlab.com/clewsy/ncbu)
#### - collabora                Collabora           (image: collabora/code)
#### - navidrome                Navidrome           (image: deluan/navidrome)
#### - vaultwarden              Vaultwarden         (image: vaultwarden/server)
#### - calibre-web              Calibre-web         (image: linuxserver/calibre-web)
#### - audiobookshelf           audiobookshelf      (image: ghcr.io/advplyr/audiobookshelf)
#### - php                      PHP                 (image: php:fpm)
#### - nginx-clews.pro          NGINX               (image: nginx)
#### - nginx-clews.dev          NGINX               (image: nginx)
#### - nginx-clews.tech         NGINX               (image: nginx)
#### - nginx-tyler.clews.pro    NGINX               (image: nginx)
#### - nginx-jadon.clews.pro    NGINX               (image: nginx)
#### - watchtower               Watchtower          (image: containrrr/watchtower)

## Note some sensitive environment variables defined in external file ".env"

version: '3'  

services:

######################################### Nginx-proxy container
  nginx-proxy:
    image: nginxproxy/nginx-proxy:alpine
    container_name: nginx-proxy
    networks:
      - clews_network
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx-proxy/conf.d:/etc/nginx/conf.d:rw
      - ./nginx-proxy/vhost.d:/etc/nginx/vhost.d
      - ./nginx-proxy/html:/usr/share/nginx/html
      - ./nginx-proxy/dhparam:/etc/nginx/dhparam
      - ./nginx-proxy/certs:/etc/nginx/certs:ro
      - ./nginx-proxy/clews_custom_proxy_settings.conf:/etc/nginx/conf.d/my_custom_proxy_settings.conf      # Enables nc uploads>1MB (client_max_body_size 500m)
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

######################################### Nginx-proxy-acme-companion container
  nginx-proxy-acme:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    networks:
      - clews_network
    depends_on:
      - nginx-proxy
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - ./nginx-proxy/vhost.d:/etc/nginx/vhost.d
      - ./nginx-proxy/html:/usr/share/nginx/html
      - ./nginx-proxy/certs:/etc/nginx/certs
      - ./nginx-proxy/acme.sh:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

######################################### MariaDB database (for nextcloud) container
  nc-db:
    image: linuxserver/mariadb
    container_name: nc-db
    networks:
      - clews_network
    environment:
      - PUID=1000
      - PGID=1000
      - MYSQL_ROOT_PASSWORD=${MARIADB_NC_MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MARIADB_NC_MYSQL_USER}
      - MYSQL_PASSWORD=${MARIADB_NC_MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MARIADB_NC_MYSQL_DATABASE}
    volumes:
      - nc-db:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

######################################### Nextcloud web app container
  nc:
    image: nextcloud
    container_name: nc
    networks:
      - clews_network
    depends_on:
      - nginx-proxy
      - nginx-proxy-acme
      - nc-db
    environment:
      - NC_default_phone_region="au"
      - NC_default_language="au"
      - OVERWRITEPROTOCOL=https
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=${NC_URL}
      - LETSENCRYPT_HOST=${NC_URL}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    volumes:
      - nc:/var/www/html
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

######################################### Nextcloud cronjob container (for periodically running cron.php)
  nc-cron:
    image: rcdailey/nextcloud-cronjob
    container_name: nc-cron
    network_mode: none
    depends_on:
      - nc
    environment:
      - NEXTCLOUD_CONTAINER_NAME=nc
      - NEXTCLOUD_CRON_MINUTE_INTERVAL=5
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

######################################### Nextcloud backup container (for periodically copying data and database)
  ncbu:
    image: registry.gitlab.com/clewsy/ncbu
    container_name: ncbu
    network_mode: none
    depends_on:
      - nc
      - nc-db
    environment:
      - NEXTCLOUD_EXEC_USER=www-data              # Name of the user that can execute the occ command in the nextcloud container (www-data by default).
      - NEXTCLOUD_CONTAINER=nc                    # Name of the nextcloud container.
      - NEXTCLOUD_DATABASE_CONTAINER=nc-db        # Name of the nextcloud database container.
      - NEXTCLOUD_BACKUP_CRON=0 0 * * *           # Run at midnight.
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Allows container to access another container.
      - /etc/localtime:/etc/localtime:ro          # Use to sync time so that the crond runs as expected.
      - nc:/mnt/nextcloud_app                     # Must match the docker-managed nextcloud app volume (/var/www/html).
      - nc-db:/mnt/nextcloud_db                   # Must match the docker-managed nextcloud database volume (/var/lib/mysql).
      - ./ncbu:/backup                            # Convenient location for the backup.
    restart: unless-stopped

######################################### Collabora (for nextcloud) container
#  collabora:
#    image: collabora/code
#    container_name: collabora
#    networks:
#      - clews_network
#    depends_on:
#      - nginx-proxy
#      - nginx-proxy-acme
#      - nc
#    cap_add:
#      - MKNOD
#    environment:
#      - aliasgroup1=https://${COLLABORA_DOMAIN}:443
#      - username=${COLLABORA_USERNAME}
#      - password=${COLLABORA_PASSWORD}
#      - VIRTUAL_PORT=9980
#      - VIRTUAL_HOST=${COLLABORA_URL}
#      - LETSENCRYPT_HOST=${COLLABORA_URL}
#      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
#      - extra_params=--o:ssl.enable=false --o:ssl.termination=true
#    restart: unless-stopped

######################################### Navidrome container
  navidrome:
    image: deluan/navidrome
    container_name: navidrome
    networks:
      - clews_network
    depends_on:
      - nginx-proxy
      - nginx-proxy-acme
    user: 1000:1000
    environment:
      - ND_SCANSCHEDULE= #Leave empty to disable (manual scan only).  Defaults to "@every 1m".
      - RecentlyAddedByModTime=true #Defaults to false.
      - ND_ENABLEGRAVATAR=true #Defaults to false.
      - VIRTUAL_PORT=4533
      - VIRTUAL_HOST=${NAVIDROME_URL}
      - LETSENCRYPT_HOST=${NAVIDROME_URL}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    volumes:
      - ./navidrome/data:/data
      - ./navidrome/music:/music
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

######################################### Vaultwarden web app container
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    networks:
      - clews_network
    depends_on:
      - nginx-proxy
      - nginx-proxy-acme
#    ports:
#      - 8170:80 #Keep a port accessible on the local network too.
    environment:
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=${VAULTWARDEN_URL}
      - LETSENCRYPT_HOST=${VAULTWARDEN_URL}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - SIGNUPS_ALLOWED=false
 #     - LOG_FILE="/data/vaultwarden.log"
    volumes:
      - ./vaultwarden/data/:/data/
    restart: unless-stopped

######################################### Calibre-Web container
  calibre-web:
    image: linuxserver/calibre-web
    container_name: calibre-web
    networks:
      - clews_network
    depends_on:
      - nginx-proxy
      - nginx-proxy-acme
    environment:
      - PUID=1000
      - PGID=1000
      - DOCKER_MODS=linuxserver/mods:universal-calibre #optional & x86-64 only. Adds the ability to perform ebook conversion
      - VIRTUAL_PORT=8083
      - VIRTUAL_HOST=${CALIBRE_URL}
      - LETSENCRYPT_HOST=${CALIBRE_URL}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    volumes:
      - ./calibre-web/config:/config
      - ./calibre-web/books:/books #This directory should contain the library as configured by calibre.
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

######################################### Audiobookshelf container
  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    container_name: audiobookshelf
    networks:
      - clews_network
    depends_on:
      - nginx-proxy
      - nginx-proxy-acme
    environment:
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=${AUDIOBOOKSHELF_URL}
      - LETSENCRYPT_HOST=${AUDIOBOOKSHELF_URL}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    volumes:
      - ./audiobookshelf/audiobooks:/audiobooks
      - ./audiobookshelf/podcasts:/podcasts
      - ./audiobookshelf/config:/config
      - ./audiobookshelf/metadata:/metadata
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

######################################### php app for use by nginx containers
  php:
    image: php:fpm
    container_name: php
    networks:
      - clews_network
    volumes:
      - ./clews.pro/html/:/clews.pro/html/   #Must match location of html/css/php files volume defined for clews.pro container.
      - ./clews.dev/html/:/clews.dev/html/   #Must match location of html/css/php files volume defined for clews.dev container.
      - ./clews.tech/html/:/clews.tech/html/ #Must match location of html/css/php files volume defined for clews.tech container.
    restart: unless-stopped

######################################### Personal website container clews.pro
  nginx-clews.pro:
    image: nginx
    container_name: nginx-clews.pro
    networks:
      - clews_network
    depends_on:
      - nginx-proxy
      - nginx-proxy-acme
      - php
    environment:
      - NGINX_HOST=${NGINX_CLEWS_PRO_URL}
      - NGINX_PORT=80
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=${NGINX_CLEWS_PRO_URL}
      - LETSENCRYPT_HOST=${NGINX_CLEWS_PRO_URL}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    volumes:
      - ./clews.pro/html/:/clews.pro/html/
      - ./clews.pro/conf.d/:/etc/nginx/conf.d/
    restart: unless-stopped
  
######################################### clews.dev website container
  nginx-clews.dev:
    image: nginx
    container_name: nginx-clews.dev
    networks:
      - clews_network
    depends_on:
      - nginx-proxy
      - nginx-proxy-acme
    environment:
      - NGINX_HOST=${NGINX_CLEWS_DEV_URL}
      - NGINX_PORT=80
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=${NGINX_CLEWS_DEV_URL}
      - LETSENCRYPT_HOST=${NGINX_CLEWS_DEV_URL}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    volumes:
      - ./clews.dev/html/:/clews.dev/html/
      - ./clews.dev/conf.d/:/etc/nginx/conf.d
    restart: unless-stopped

######################################### clews.tech website container
  nginx-clews.tech:
    image: nginx
    container_name: nginx-clews.tech
    networks:
      - clews_network
    depends_on:
      - nginx-proxy
      - nginx-proxy-acme
    environment:
      - NGINX_HOST=${NGINX_CLEWS_TECH_URL}
      - NGINX_PORT=80
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=${NGINX_CLEWS_TECH_URL}
      - LETSENCRYPT_HOST=${NGINX_CLEWS_TECH_URL}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    volumes:
      - ./clews.tech/html/:/clews.tech/html/
      - ./clews.tech/conf.d/:/etc/nginx/conf.d
    restart: unless-stopped

########################################## tyler website container
#  nginx-tyler.clews.pro:
#    image: nginx
#    container_name: nginx-tyler.clews.pro
#    networks:
#      - clews_network
#    depends_on:
#      - nginx-proxy
#      - nginx-proxy-acme
#    environment:
#      - NGINX_HOST=${NGINX_TYLER_CLEWS_PRO_URL}
#      - NGINX_PORT=80
#      - VIRTUAL_PORT=80
#      - VIRTUAL_HOST=${NGINX_TYLER_CLEWS_PRO_URL}
#      - LETSENCRYPT_HOST=${NGINX_TYLER_CLEWS_PRO_URL}
#      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
#    volumes:
#      - ./tyler.clews.pro/html:/usr/share/nginx/html
#    restart: unless-stopped

########################################## jadon website container
#  nginx-jadon.clews.pro:
#    image: nginx
#    container_name: nginx-jadon.clews.pro
#    networks:
#      - clews_network
#    depends_on:
#      - nginx-proxy
#      - nginx-proxy-acme
#    environment:
#      - NGINX_HOST=${NGINX_JADON_CLEWS_PRO_URL}
#      - NGINX_PORT=80
#      - VIRTUAL_PORT=80
#      - VIRTUAL_HOST=${NGINX_JADON_CLEWS_PRO_URL}
#      - LETSENCRYPT_HOST=${NGINX_JADON_CLEWS_PRO_URL}
#      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
#    volumes:
#      - ./jadon.clews.pro/html:/usr/share/nginx/html
#    restart: unless-stopped

######################################### Watchtower container
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    environment:
      - WATCHTOWER_CLEANUP=true #Remove old images.
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_REVIVE_STOPPED=true
      - WATCHTOWER_SCHEDULE=0 30 4 * * * #Daily at 0430hrs.
#      - WATCHTOWER_DEBUG=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock #Mount docker.sock to give watchtower ability to control docker.
      - /etc/timezone:/etc/timezone:ro
    restart: unless-stopped

######################################### Docker-managed volumes
volumes:
  nc:
  nc-db:
#  nextcloud-app:
#  nextcloud-db:

######################################### Docker-managed networks
networks:
  clews_network:
